{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\React\\\\Redux-1\\\\src\\\\component\\\\Todo\\\\Item\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport { TodoActions } from \"../store/todoReducer\";\nimport Span from \"../../UI/Span\";\nimport Button from \"../../UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(_ref) {\n  _s();\n  let {\n    id,\n    title,\n    complete,\n    content\n  } = _ref;\n  const [isEdit, setIsEdit] = useState(false);\n  const [contentText, setContentTextt] = useState(content);\n  const dispatch = useDispatch();\n  let eleDefaultProps = {\n    id: id.toString(),\n    name: title,\n    title\n  };\n\n  // imput\n  const eleInput = /*#__PURE__*/_jsxDEV(Input, {\n    ...eleDefaultProps,\n    type: \"text\",\n    value: contentText,\n    onChange: e => setContentTextt(e.currentTarget.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 19\n  }, this);\n\n  //lable\n  const eleContent = /*#__PURE__*/_jsxDEV(Span, {\n    ...eleDefaultProps,\n    title: contentText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  // buttons\n  const eleSaveButton = /*#__PURE__*/_jsxDEV(Button, {\n    ...eleDefaultProps,\n    title: \"Save\",\n    onClick: () => {\n      setIsEdit(false);\n      dispatch(TodoActions.Edit({\n        id,\n        content: contentText\n      }));\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n  const eleEditButton = /*#__PURE__*/_jsxDEV(Button, {\n    ...eleDefaultProps,\n    title: \"Edit\",\n    onClick: () => setIsEdit(true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this);\n  const eleDeleteButton = /*#__PURE__*/_jsxDEV(Button, {\n    ...eleDefaultProps,\n    title: \"Delete\",\n    onClick: () => dispatch(TodoActions.Delete({\n      id\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    id: \"form-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), isEdit ? eleInput : eleContent, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), isEdit ? eleSaveButton : eleEditButton, eleDeleteButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n}\n_s(Form, \"yEKHW1apd/L8gRSAd88/QEWW+qw=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Input","TodoActions","Span","Button","useDispatch","jsxDEV","_jsxDEV","Form","_ref","_s","id","title","complete","content","isEdit","setIsEdit","contentText","setContentTextt","dispatch","eleDefaultProps","toString","name","eleInput","type","value","onChange","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","eleContent","eleSaveButton","onClick","Edit","eleEditButton","eleDeleteButton","Delete","action","children","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Documents/React/Redux-1/src/component/Todo/Item/Form.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input from \"../../UI/Input\";\r\nimport { TodoActions, initialStateType, todoType } from \"../store/todoReducer\";\r\nimport Span from \"../../UI/Span\";\r\nimport { BaseElemetPropsType } from \"../../UI/BaseElemetPropsType\";\r\nimport Button from \"../../UI/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nfunction Form({ id, title, complete, content }: todoType): JSX.Element {\r\n\tconst [isEdit, setIsEdit] = useState(false);\r\n\tconst [contentText, setContentTextt] = useState(content);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tlet eleDefaultProps: BaseElemetPropsType = { id: id.toString(), name: title, title };\r\n\r\n\t// imput\r\n\tconst eleInput = <Input {...eleDefaultProps} type=\"text\" value={contentText} onChange={(e) => setContentTextt(e.currentTarget.value)} />;\r\n\r\n\t//lable\r\n\tconst eleContent = <Span {...eleDefaultProps} title={contentText} />;\r\n\t// buttons\r\n\tconst eleSaveButton = (\r\n\t\t<Button\r\n\t\t\t{...eleDefaultProps}\r\n\t\t\ttitle=\"Save\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetIsEdit(false);\r\n\t\t\t\tdispatch(TodoActions.Edit({ id, content: contentText }));\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n\tconst eleEditButton = <Button {...eleDefaultProps} title=\"Edit\" onClick={() => setIsEdit(true)} />;\r\n\tconst eleDeleteButton = <Button {...eleDefaultProps} title=\"Delete\" onClick={() => dispatch(TodoActions.Delete({ id }))} />;\r\n\r\n\treturn (\r\n\t\t<form action=\"\" id=\"form-1\">\r\n\t\t\t<hr />\r\n\t\t\t{isEdit ? eleInput : eleContent}\r\n\t\t\t<hr />\r\n\t\t\t{isEdit ? eleSaveButton : eleEditButton}\r\n\t\t\t{eleDeleteButton}\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}